//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26984840
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_60, texmode_independent
.address_size 64

	// .globl	BFSGraph_kernel0
// BFSGraph_kernel4$lwreds__stop has been demoted

.entry BFSGraph_kernel0(
	.param .u32 BFSGraph_kernel0_param_0,
	.param .u64 .ptr .global .align 1 BFSGraph_kernel0_param_1,
	.param .u64 .ptr .global .align 1 BFSGraph_kernel0_param_2,
	.param .u64 .ptr .global .align 1 BFSGraph_kernel0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [BFSGraph_kernel0_param_0];
	ld.param.u64 	%rd1, [BFSGraph_kernel0_param_1];
	ld.param.u64 	%rd2, [BFSGraph_kernel0_param_2];
	ld.param.u64 	%rd3, [BFSGraph_kernel0_param_3];
	mov.b32	%r3, %envreg3;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mad.lo.s32 	%r6, %r4, %r5, %r3;
	mov.u32 	%r7, %tid.x;
	add.s32 	%r1, %r6, %r7;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_2;

	cvt.s64.s32	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd5], %rs1;
	add.s64 	%rd6, %rd1, %rd4;
	st.global.u8 	[%rd6], %rs1;
	add.s64 	%rd7, %rd2, %rd4;
	st.global.u8 	[%rd7], %rs1;

BB0_2:
	ret;
}

	// .globl	BFSGraph_kernel1
.entry BFSGraph_kernel1(
	.param .u64 .ptr .global .align 1 BFSGraph_kernel1_param_0,
	.param .u64 .ptr .global .align 1 BFSGraph_kernel1_param_1,
	.param .u32 BFSGraph_kernel1_param_2
)
.reqntid 1, 1, 1
{
	.reg .b16 	%rs<2>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [BFSGraph_kernel1_param_0];
	ld.param.u64 	%rd2, [BFSGraph_kernel1_param_1];
	ld.param.s32 	%rd3, [BFSGraph_kernel1_param_2];
	add.s64 	%rd4, %rd1, %rd3;
	mov.u16 	%rs1, 1;
	st.global.u8 	[%rd4], %rs1;
	add.s64 	%rd5, %rd2, %rd3;
	st.global.u8 	[%rd5], %rs1;
	ret;
}

	// .globl	BFSGraph_kernel2
.entry BFSGraph_kernel2(
	.param .u32 BFSGraph_kernel2_param_0,
	.param .u32 BFSGraph_kernel2_param_1,
	.param .u64 .ptr .global .align 4 BFSGraph_kernel2_param_2
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<6>;


	ld.param.u32 	%r3, [BFSGraph_kernel2_param_0];
	ld.param.u32 	%r2, [BFSGraph_kernel2_param_1];
	ld.param.u64 	%rd1, [BFSGraph_kernel2_param_2];
	mov.b32	%r4, %envreg3;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB2_3;

	mul.wide.s32 	%rd2, %r1, 4;
	add.s64 	%rd3, %rd1, %rd2;
	mov.u32 	%r9, -1;
	st.global.u32 	[%rd3], %r9;
	setp.ne.s32	%p2, %r1, %r2;
	@%p2 bra 	BB2_3;

	mul.wide.s32 	%rd4, %r2, 4;
	add.s64 	%rd5, %rd1, %rd4;
	mov.u32 	%r10, 0;
	st.global.u32 	[%rd5], %r10;

BB2_3:
	ret;
}

	// .globl	BFSGraph_kernel3
.entry BFSGraph_kernel3(
	.param .u32 BFSGraph_kernel3_param_0,
	.param .u32 BFSGraph_kernel3_param_1,
	.param .u64 .ptr .global .align 4 BFSGraph_kernel3_param_2,
	.param .u64 .ptr .global .align 4 BFSGraph_kernel3_param_3,
	.param .u64 .ptr .global .align 1 BFSGraph_kernel3_param_4,
	.param .u64 .ptr .global .align 4 BFSGraph_kernel3_param_5,
	.param .u64 .ptr .global .align 1 BFSGraph_kernel3_param_6,
	.param .u64 .ptr .global .align 1 BFSGraph_kernel3_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<7>;
	.reg .b32 	%r<27>;
	.reg .b64 	%rd<25>;


	ld.param.u32 	%r13, [BFSGraph_kernel3_param_1];
	ld.param.u64 	%rd7, [BFSGraph_kernel3_param_2];
	ld.param.u64 	%rd8, [BFSGraph_kernel3_param_3];
	ld.param.u64 	%rd9, [BFSGraph_kernel3_param_4];
	ld.param.u64 	%rd10, [BFSGraph_kernel3_param_5];
	ld.param.u64 	%rd11, [BFSGraph_kernel3_param_6];
	ld.param.u64 	%rd12, [BFSGraph_kernel3_param_7];
	mov.b32	%r14, %envreg3;
	mov.u32 	%r15, %ctaid.x;
	mov.u32 	%r16, %ntid.x;
	mad.lo.s32 	%r17, %r15, %r16, %r14;
	mov.u32 	%r18, %tid.x;
	add.s32 	%r1, %r17, %r18;
	setp.ge.s32	%p1, %r1, %r13;
	@%p1 bra 	BB3_7;

	cvt.s64.s32	%rd13, %r1;
	add.s64 	%rd1, %rd9, %rd13;
	ld.global.u8 	%rs1, [%rd1];
	and.b16  	%rs2, %rs1, 1;
	setp.eq.b16	%p2, %rs2, 1;
	@!%p2 bra 	BB3_7;
	bra.uni 	BB3_2;

BB3_2:
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd1], %rs3;
	mul.wide.s32 	%rd14, %r1, 8;
	add.s64 	%rd15, %rd10, %rd14;
	add.s64 	%rd2, %rd15, 4;
	ld.global.u32 	%r26, [%rd15+4];
	setp.lt.s32	%p3, %r26, 1;
	@%p3 bra 	BB3_7;

	mul.wide.s32 	%rd16, %r1, 4;
	add.s64 	%rd3, %rd7, %rd16;
	ld.global.u32 	%r25, [%rd2+-4];
	mul.wide.s32 	%rd17, %r25, 4;
	add.s64 	%rd24, %rd8, %rd17;
	mov.u32 	%r24, %r25;

BB3_4:
	ld.global.u32 	%r7, [%rd24];
	cvt.s64.s32	%rd18, %r7;
	add.s64 	%rd19, %rd11, %rd18;
	ld.global.u8 	%rs4, [%rd19];
	and.b16  	%rs5, %rs4, 1;
	setp.eq.b16	%p4, %rs5, 1;
	@%p4 bra 	BB3_6;

	ld.global.u32 	%r19, [%rd3];
	add.s32 	%r20, %r19, 1;
	mul.wide.s32 	%rd20, %r7, 4;
	add.s64 	%rd21, %rd7, %rd20;
	st.global.u32 	[%rd21], %r20;
	add.s64 	%rd23, %rd12, %rd18;
	mov.u16 	%rs6, 1;
	st.global.u8 	[%rd23], %rs6;
	ld.global.u32 	%r26, [%rd2];
	ld.global.u32 	%r25, [%rd2+-4];

BB3_6:
	add.s64 	%rd24, %rd24, 4;
	add.s32 	%r21, %r25, %r26;
	add.s32 	%r24, %r24, 1;
	setp.lt.s32	%p5, %r24, %r21;
	@%p5 bra 	BB3_4;

BB3_7:
	ret;
}

	// .globl	BFSGraph_kernel4
.entry BFSGraph_kernel4(
	.param .u64 .ptr .global .align 1 BFSGraph_kernel4_param_0,
	.param .u32 BFSGraph_kernel4_param_1,
	.param .u64 .ptr .global .align 1 BFSGraph_kernel4_param_2,
	.param .u64 .ptr .global .align 1 BFSGraph_kernel4_param_3,
	.param .u64 .ptr .global .align 1 BFSGraph_kernel4_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b16 	%rs<18>;
	.reg .b32 	%r<33>;
	.reg .b64 	%rd<37>;
	// demoted variable
	.shared .align 1 .b8 BFSGraph_kernel4$lwreds__stop[64];

	ld.param.u64 	%rd4, [BFSGraph_kernel4_param_0];
	ld.param.u32 	%r8, [BFSGraph_kernel4_param_1];
	ld.param.u64 	%rd5, [BFSGraph_kernel4_param_2];
	ld.param.u64 	%rd6, [BFSGraph_kernel4_param_3];
	ld.param.u64 	%rd7, [BFSGraph_kernel4_param_4];
	mov.u32 	%r9, %tid.x;
	cvt.s64.s32	%rd8, %r9;
	mov.u32 	%r10, %tid.y;
	mov.u32 	%r11, %ntid.x;
	mul.wide.s32 	%rd9, %r11, %r10;
	add.s64 	%rd10, %rd9, %rd8;
	mov.u32 	%r12, %tid.z;
	cvt.s64.s32	%rd11, %r12;
	mov.u32 	%r13, %ntid.y;
	mul.wide.s32 	%rd12, %r13, %r11;
	mul.lo.s64 	%rd13, %rd12, %rd11;
	add.s64 	%rd14, %rd10, %rd13;
	cvt.u32.u64	%r1, %rd14;
	mov.u32 	%r14, %ntid.z;
	cvt.u64.u32	%rd15, %r14;
	mul.lo.s64 	%rd16, %rd12, %rd15;
	cvt.u32.u64	%r32, %rd16;
	mov.u32 	%r15, %ctaid.x;
	mov.b32	%r16, %envreg0;
	add.s32 	%r17, %r15, %r16;
	cvt.u64.u32	%rd17, %r17;
	mov.u32 	%r18, %ctaid.y;
	mov.b32	%r19, %envreg1;
	add.s32 	%r20, %r18, %r19;
	cvt.s64.s32	%rd18, %r20;
	mov.b32	%r21, %envreg6;
	cvt.s64.s32	%rd19, %r21;
	mov.u32 	%r22, %ctaid.z;
	mov.b32	%r23, %envreg2;
	add.s32 	%r24, %r22, %r23;
	mov.b32	%r25, %envreg7;
	mul.wide.s32 	%rd20, %r24, %r25;
	add.s64 	%rd21, %rd20, %rd18;
	mul.lo.s64 	%rd22, %rd21, %rd19;
	add.s64 	%rd1, %rd22, %rd17;
	cvt.s64.s32 	%rd23, %rd14;
	mov.u64 	%rd24, BFSGraph_kernel4$lwreds__stop;
	add.s64 	%rd2, %rd24, %rd23;
	mov.u16 	%rs1, 0;
	st.volatile.shared.u8 	[%rd2], %rs1;
	mov.b32	%r26, %envreg3;
	add.s32 	%r27, %r26, %r9;
	mad.lo.s32 	%r3, %r15, %r11, %r27;
	setp.ge.s32	%p5, %r3, %r8;
	@%p5 bra 	BB4_3;

	cvt.s64.s32	%rd25, %r3;
	add.s64 	%rd3, %rd7, %rd25;
	ld.global.u8 	%rs2, [%rd3];
	and.b16  	%rs3, %rs2, 1;
	setp.eq.b16	%p6, %rs3, 1;
	@!%p6 bra 	BB4_3;
	bra.uni 	BB4_2;

BB4_2:
	add.s64 	%rd27, %rd5, %rd25;
	mov.u16 	%rs4, 1;
	st.global.u8 	[%rd27], %rs4;
	add.s64 	%rd28, %rd6, %rd25;
	st.global.u8 	[%rd28], %rs4;
	st.volatile.shared.u8 	[%rd2], %rs4;
	st.global.u8 	[%rd3], %rs1;

BB4_3:
	bar.sync 	0;
	shr.s32 	%r31, %r32, 1;
	setp.lt.s32	%p7, %r31, 1;
	@%p7 bra 	BB4_15;

BB4_4:
	mov.u32 	%r5, %r31;
	setp.ge.s32	%p8, %r1, %r5;
	@%p8 bra 	BB4_8;

	ld.volatile.shared.u8 	%rs6, [%rd2];
	mov.pred 	%p20, -1;
	and.b16  	%rs7, %rs6, 1;
	setp.eq.b16	%p10, %rs7, 1;
	@%p10 bra 	BB4_7;

	add.s32 	%r28, %r5, %r1;
	cvt.s64.s32	%rd29, %r28;
	add.s64 	%rd31, %rd24, %rd29;
	ld.volatile.shared.u8 	%rs8, [%rd31];
	and.b16  	%rs9, %rs8, 1;
	setp.eq.b16	%p20, %rs9, 1;

BB4_7:
	selp.u16	%rs10, 1, 0, %p20;
	st.volatile.shared.u8 	[%rd2], %rs10;

BB4_8:
	setp.ne.s32	%p11, %r1, 0;
	and.b32  	%r29, %r32, 1;
	setp.eq.b32	%p12, %r29, 1;
	not.pred 	%p13, %p12;
	or.pred  	%p14, %p13, %p11;
	@%p14 bra 	BB4_12;

	ld.volatile.shared.u8 	%rs11, [%rd2];
	mov.pred 	%p21, -1;
	and.b16  	%rs12, %rs11, 1;
	setp.eq.b16	%p16, %rs12, 1;
	@%p16 bra 	BB4_11;

	add.s32 	%r30, %r32, -1;
	cvt.s64.s32	%rd32, %r30;
	add.s64 	%rd34, %rd24, %rd32;
	ld.volatile.shared.u8 	%rs13, [%rd34];
	and.b16  	%rs14, %rs13, 1;
	setp.eq.b16	%p21, %rs14, 1;

BB4_11:
	selp.u16	%rs15, 1, 0, %p21;
	st.volatile.shared.u8 	[%rd2], %rs15;

BB4_12:
	setp.lt.s32	%p17, %r5, 17;
	@%p17 bra 	BB4_14;

	bar.sync 	0;

BB4_14:
	shr.s32 	%r31, %r5, 1;
	setp.gt.s32	%p18, %r31, 0;
	mov.u32 	%r32, %r5;
	@%p18 bra 	BB4_4;

BB4_15:
	setp.ne.s32	%p19, %r1, 0;
	@%p19 bra 	BB4_17;

	ld.volatile.shared.u8 	%rs16, [%rd2];
	cvt.s64.s32 	%rd35, %rd1;
	add.s64 	%rd36, %rd4, %rd35;
	and.b16  	%rs17, %rs16, 1;
	st.global.u8 	[%rd36], %rs17;

BB4_17:
	ret;
}


.metadata_section {

.metadata 0 {
	"cl_kernel_attributes",
	"BFSGraph_kernel0",
	"reqd_work_group_size(64,1,1)"
}

.metadata 1 {
	"cl_kernel_attributes",
	"BFSGraph_kernel1",
	"reqd_work_group_size(1,1,1)"
}

.metadata 2 {
	"cl_kernel_attributes",
	"BFSGraph_kernel2",
	"reqd_work_group_size(64,1,1)"
}

.metadata 3 {
	"cl_kernel_attributes",
	"BFSGraph_kernel3",
	"reqd_work_group_size(64,1,1)"
}

.metadata 4 {
	"cl_kernel_attributes",
	"BFSGraph_kernel4",
	"reqd_work_group_size(64,1,1)"
}

} // end of .metadata_section
  